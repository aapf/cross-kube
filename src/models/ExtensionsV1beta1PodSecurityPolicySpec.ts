// tslint:disable
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.14.11
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { KubeObject } from '../runtime'
import ExtensionsV1beta1AllowedCSIDriver from './ExtensionsV1beta1AllowedCSIDriver'
import ExtensionsV1beta1AllowedFlexVolume from './ExtensionsV1beta1AllowedFlexVolume'
import ExtensionsV1beta1AllowedHostPath from './ExtensionsV1beta1AllowedHostPath'
import ExtensionsV1beta1FSGroupStrategyOptions from './ExtensionsV1beta1FSGroupStrategyOptions'
import ExtensionsV1beta1HostPortRange from './ExtensionsV1beta1HostPortRange'
import ExtensionsV1beta1RunAsGroupStrategyOptions from './ExtensionsV1beta1RunAsGroupStrategyOptions'
import ExtensionsV1beta1RunAsUserStrategyOptions from './ExtensionsV1beta1RunAsUserStrategyOptions'
import ExtensionsV1beta1SELinuxStrategyOptions from './ExtensionsV1beta1SELinuxStrategyOptions'
import ExtensionsV1beta1SupplementalGroupsStrategyOptions from './ExtensionsV1beta1SupplementalGroupsStrategyOptions'

/**
 * PodSecurityPolicySpec defines the policy enforced. Deprecated: use PodSecurityPolicySpec from policy API Group instead.
 * @export
 * @interface ExtensionsV1beta1PodSecurityPolicySpec
 */
export default interface ExtensionsV1beta1PodSecurityPolicySpec extends KubeObject {
  /**
   * allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
   * @type {boolean}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  allowPrivilegeEscalation?: boolean

  /**
   * AllowedCSIDrivers is a whitelist of inline CSI drivers that must be explicitly set to be embedded within a pod spec. An empty value means no CSI drivers can run inline within a pod spec.
   * @type {Array<ExtensionsV1beta1AllowedCSIDriver>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  allowedCSIDrivers?: Array<ExtensionsV1beta1AllowedCSIDriver>

  /**
   * allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author\'s discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.
   * @type {Array<string>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  allowedCapabilities?: Array<string>

  /**
   * allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"volumes\" field.
   * @type {Array<ExtensionsV1beta1AllowedFlexVolume>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  allowedFlexVolumes?: Array<ExtensionsV1beta1AllowedFlexVolume>

  /**
   * allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.
   * @type {Array<ExtensionsV1beta1AllowedHostPath>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  allowedHostPaths?: Array<ExtensionsV1beta1AllowedHostPath>

  /**
   * AllowedProcMountTypes is a whitelist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.
   * @type {Array<string>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  allowedProcMountTypes?: Array<string>

  /**
   * allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.  Examples: e.g. \"foo/_*\" allows \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" allows \"foo.bar\", \"foo.baz\", etc.
   * @type {Array<string>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  allowedUnsafeSysctls?: Array<string>

  /**
   * defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.
   * @type {Array<string>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  defaultAddCapabilities?: Array<string>

  /**
   * defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
   * @type {boolean}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  defaultAllowPrivilegeEscalation?: boolean

  /**
   * forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.  Examples: e.g. \"foo/_*\" forbids \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" forbids \"foo.bar\", \"foo.baz\", etc.
   * @type {Array<string>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  forbiddenSysctls?: Array<string>

  /**
   *
   * @type {ExtensionsV1beta1FSGroupStrategyOptions}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  fsGroup: ExtensionsV1beta1FSGroupStrategyOptions

  /**
   * hostIPC determines if the policy allows the use of HostIPC in the pod spec.
   * @type {boolean}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  hostIPC?: boolean

  /**
   * hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
   * @type {boolean}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  hostNetwork?: boolean

  /**
   * hostPID determines if the policy allows the use of HostPID in the pod spec.
   * @type {boolean}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  hostPID?: boolean

  /**
   * hostPorts determines which host port ranges are allowed to be exposed.
   * @type {Array<ExtensionsV1beta1HostPortRange>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  hostPorts?: Array<ExtensionsV1beta1HostPortRange>

  /**
   * privileged determines if a pod can request to be run as privileged.
   * @type {boolean}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  privileged?: boolean

  /**
   * readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
   * @type {boolean}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  readOnlyRootFilesystem?: boolean

  /**
   * requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
   * @type {Array<string>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  requiredDropCapabilities?: Array<string>

  /**
   *
   * @type {ExtensionsV1beta1RunAsGroupStrategyOptions}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  runAsGroup?: ExtensionsV1beta1RunAsGroupStrategyOptions

  /**
   *
   * @type {ExtensionsV1beta1RunAsUserStrategyOptions}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  runAsUser: ExtensionsV1beta1RunAsUserStrategyOptions

  /**
   *
   * @type {ExtensionsV1beta1SELinuxStrategyOptions}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  seLinux: ExtensionsV1beta1SELinuxStrategyOptions

  /**
   *
   * @type {ExtensionsV1beta1SupplementalGroupsStrategyOptions}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  supplementalGroups: ExtensionsV1beta1SupplementalGroupsStrategyOptions

  /**
   * volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use \'*\'.
   * @type {Array<string>}
   * @memberof ExtensionsV1beta1PodSecurityPolicySpec
   */
  volumes?: Array<string>
}
